[null,{"name":"WelcomeMessage","temp":"member","event-type":"6","actions":[{"channel":"4","varName":"","message":"Welcome ${tempVars(\"member\")}!","storage":"0","varName2":"","name":"Send Message"}],"_id":"wzyOP"},{"name":"LeaveMessage","temp":"member","event-type":"7","actions":[{"channel":"4","varName":"","message":"${tempVars(\"member\")} left the server...","storage":"0","varName2":"","name":"Send Message"}],"_id":"qwbXH"},{"name":"AutoResponse","temp":"msg","event-type":"2","actions":[{"message":"1","varName":"msg","info":"2","storage":"1","varName2":"text","name":"Store Message Info"},{"storage":"1","varName":"text","comparison":"6","value":"(hello|hey|hi)","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Variable"},{"message":"1","varName":"msg","info":"4","storage":"1","varName2":"channel","name":"Store Message Info"},{"channel":"5","varName":"channel","message":"Hello!","storage":"0","varName2":"","name":"Send Message"}],"_id":"CXgiH"},{"name":"GiveRole","temp":"givenude","event-type":"6","actions":[{"info":"1","find":"Unverified","storage":"1","varName":"giverole","name":"Find Role"},{"member":"2","varName2":"givenude","role":"3","varName":"giverole","name":"Add Member Role"}],"_id":"crqiH"},{"name":"LevelingSystem","temp":"msg","event-type":"2","actions":[{"message":"1","varName":"msg","info":"3","storage":"1","varName2":"member","name":"Store Message Info"},{"member":"2","varName":"member","dataName":"exp","changeType":"1","value":"1","name":"Control Member Data"},{"member":"2","varName":"member","dataName":"level","defaultVal":"1","storage":"1","varName2":"myLevel","name":"Store Member Data"},{"member":"2","varName":"member","dataName":"exp","comparison":"1","value":"${tempVars(\"myLevel\") * 5}","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Member Data"},{"member":"2","varName":"member","dataName":"exp","changeType":"0","value":"0","name":"Control Member Data"},{"member":"2","varName":"member","dataName":"level","changeType":"1","value":"1","name":"Control Member Data"},{"message":"1","varName":"msg","info":"4","storage":"1","varName2":"channel","name":"Store Message Info"},{"member":"2","varName":"member","dataName":"level","defaultVal":"1","storage":"1","varName2":"myLevel","name":"Store Member Data"},{"channel":"4","varName":"","message":"${tempVars(\"member\")} reached level ${tempVars(\"myLevel\")}!","storage":"0","varName2":"","name":"Send Message"}],"_id":"dwBsQ"},{"name":"Verify","temp":"UserJoined","event-type":"6","_id":"nzmKP","actions":[{"member":"2","varName":"UserJoined","info":"1","storage":"1","varName2":"IDDD","name":"Store Member Info"},{"info":"0","find":"578198281675341825","storage":"1","varName":"DdD","name":"Find Channel"},{"title":"Verify ${member}","author":"Verify Action","color":"","timestamp":"true","url":"","authorIcon":"","imageUrl":"https://cdn.discordapp.com/attachments/540985252835753994/540985294430928913/Verify-Logo_stacked-2017.png","thumbUrl":"","storage":"1","varName":"Embed","name":"Create Embed Message"},{"storage":"1","varName":"Embed","message":"**React With:** ✅ to get to the next step\n**You have 1 minute to react or you will be kicked**","name":"Set Embed Description"},{"storage":"1","varName":"Embed","channel":"5","varName2":"DdD","storage3":"1","varName3":"Embed","name":"Send Embed Message"},{"storage":"1","varName":"Embed","emoji":"4","varName2":"✅","varName3":"","name":"Add Reaction"},{"storage":"1","varName":"Embed","filter":"reaction.emoji.name === '✅' && user.id === '${tempVars(\"IDDD\")}'","max":"1","time":"60000","maxEmojis":"","maxUsers":"1","iftrue":"2","iftrueVal":"8","iffalse":"2","iffalseVal":"15","storage2":"0","varName2":"","name":"Await Reaction Call Action"},{"storage":"1","varName":"Embed","name":"Delete Message"},{"channel":"5","varName":"DdD","message":"**Say ```2dsjn},;``` here to finish your verify action!**\nYou Have One Minute","storage":"1","varName2":"Mes","name":"Send Message"},{"storage":"3","varName":"DdD","filter":"content === '2dsjn},;'","max":"1","time":"60000","storage2":"1","varName2":"Mess","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"15","name":"Await Response Call Action"},{"info":"1","find":"Members","storage":"1","varName":"Source","name":"Find Role"},{"member":"2","varName2":"UserJoined","role":"3","varName":"Source","name":"Add Member Role"},{"storage":"1","varName":"Mes","name":"Delete Message"},{"storage":"1","varName":"Mess","name":"Delete Message"},{"name":"End Action Sequence"},{"member":"2","varName":"UserJoined","reason":"Did not react in time","name":"Kick Member"}]},{"name":"reactionGet","temp":"msgReaction","event-type":"28","_id":"zimku","actions":[{"reaction":"1","varName":"msgReaction","info":"0","storage":"1","varName2":"messageRct","name":"Store Reaction Info"},{"behavior":"1","interpretation":"1","code":"const reaction = tempVars('msgReaction');\nconst msgRct = tempVars('messageRct');\nconst rectarray = globalVars('reactionRoleInf');\nvar usrWhoReacted = reaction.users.last();\nconst _this = this;\nvar messageSent = 'Successfully added the role {roleName} in {server}'; \nvar interval;\nvar arrayNum;\n\n// Setings\n\nconst dmUserAfter = true; // Default, can be changed to false\n\n//\n\nasync function checkRoles() {\n\tif (usrWhoReacted.id != client.user.id) {\n\t\tif (usrWhoReacted.data('cooldownData.reactionMenu') != 1) {\n\t\t\tfor (i = 0; i < rectarray.length; i++) {\n\t\t\t\tif (rectarray[i][msgRct.id] != null) {\n                    arrayNum = i;\n\t\t\t\t\tvar newArr = rectarray[i][msgRct.id];\n\t\t\t\t\tfor (io = 0; io < newArr.length; io++) {\n\t\t\t\t\t\tif (newArr[io][0] == reaction.emoji.name) {\n\t\t\t\t\t\t\tvar newUsr = await msgRct.guild.fetchMember(usrWhoReacted);\n\t\t\t\t\t\t\tvar checkRole = await msgRct.guild.roles.get(newArr[io][1])\n\t\t\t\t\t\t\tif (checkRole != null) {\n\t\t\t\t\t\t\t\tif (newUsr.roles.has(newArr[io][1])) {\n                                    usrWhoReacted.setData('cooldownData.reactionMenu', '1');\n\t\t\t\t\t\t\t\t\tvar tempThing = globalVars('reactionRoleInf');\n\t\t\t\t\t\t\t\t\ttempThing[i][msgRct.id][3] = await reaction.users.array();\n                                    _this.storeValue(tempThing, 3, 'reactionRoleInf', cache)\n                                    interval = setInterval(resetTimer, 1000)\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t} else {\n                                    usrWhoReacted.setData('cooldownData.reactionMenu', '1');\n\t\t\t\t\t\t\t\t\tvar tempThing = globalVars('reactionRoleInf');\n\t\t\t\t\t\t\t\t\ttempThing[i][msgRct.id][3] = await reaction.users.array();\n\t\t\t\t\t\t\t\t\t_this.storeValue(tempThing, 3, 'reactionRoleInf', cache)\n\t\t\t\t\t\t\t\t\tnewUsr.addRole(newArr[io][1]);\n\t\t\t\t\t\t\t\t\tif (dmUserAfter) {\n                                        messageSent = messageSent.replace(/{roleName}/g, newArr[io][2]);\n                                        messageSent = messageSent.replace(/{server}/g, msgRct.guild.name);\n\t\t\t\t\t\t\t\t\t\tnewUsr.send(messageSent);\n                                    }\n                                    interval = setInterval(resetTimer, 1000)\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n                                var newArray = rectarray.filter(someItem => {\n                                    someItem.hasOwnProperty(msgRct.id) != true\n                                })\n                                _this.storeValue(newArray, 3, 'reactionRoleInf', cache);\n                                _this.storeValue(JSON.stringify(newArray), 3, 'tempData', cache);\n\t\t\t\t\t\t\t\tmsgRct.edit({\n\t\t\t\t\t\t\t\t\tembed: {\n\t\t\t\t\t\t\t\t\t\tcolor: 0xff0000,\n\t\t\t\t\t\t\t\t\t\ttitle: \"Role Reaction Menu\",\n\t\t\t\t\t\t\t\t\t\tdescription: `An error has occured.\\nOne of the roles, role name - ${newArr[io][2]} does not exist anymore.\\nIn turn, this embed has now shutdown.\\nPlease remake the embed.`,\n\t\t\t\t\t\t\t\t\t\ttimestamp: new Date()\n\t\t\t\t\t\t\t\t\t}\n                                });\n                                _this.callNextAction(cache);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n            usrWhoReacted.setData('cooldownData.reactionMenu', '0');\n        }\n\t}\n\n}\n\nfunction resetTimer() {\n    usrWhoReacted.setData('cooldownData.reactionMenu', '0');\n    clearInterval(interval);\n}\n\ncheckRoles();","storage":"0","varName":"","name":"Run Script"},{"storage":"3","varName":"tempData","name":"Save Variable"}]},{"name":"reactionRev","temp":"msgReaction","event-type":"29","_id":"ZQmhC","actions":[{"reaction":"1","varName":"msgReaction","info":"0","storage":"1","varName2":"messageRct","name":"Store Reaction Info"},{"behavior":"1","interpretation":"1","code":"const reaction = tempVars('msgReaction');\nconst msgRct = tempVars('messageRct');\nconst rectarray = globalVars('reactionRoleInf');\nvar usrWhoReacted = reaction.users.array();\nconst _this = this;\nvar messageSent = 'Successfully removed the role {roleName} in {server}'; \n// The only variables that work rn, {rolename} and {server}\nvar actualUser;\n// Setings\n\nconst dmUserAfter = true; // Default, can be changed to false\n\n//\n\nasync function checkRoles() {\n\tfor (i = 0; i < rectarray.length; i++) {\n\t\tif (rectarray[i][msgRct.id] != null) {\n            arrayNum = i;\n\t\t\tif (rectarray[i][msgRct.id][3] != null) {\n\t\t\t\tusrWhoReacted = rectarray[i][msgRct.id][3].filter(val => !usrWhoReacted.includes(val))[0];\n\t\t\t\tif (usrWhoReacted != null) {\n\t\t\t\t\tif (usrWhoReacted.data('cooldownData.reactionMenu') != 1) {\n\t\t\t\t\t\tvar newArr = rectarray[i][msgRct.id];\n\t\t\t\t\t\tfor (io = 0; io < newArr.length; io++) {\n\t\t\t\t\t\t\tif (newArr[io][0] == reaction.emoji.name) {\n\t\t\t\t\t\t\t\tvar newUsr = await msgRct.guild.fetchMember(usrWhoReacted);\n\t\t\t\t\t\t\t\tvar checkRole = await msgRct.guild.roles.get(newArr[io][1]);\n\t\t\t\t\t\t\t\tif (checkRole != null) {\n\t\t\t\t\t\t\t\t\tif (!newUsr.roles.has(newArr[io][1])) {\n                                        usrWhoReacted.setData('cooldownData.reactionMenu', '1');\n                                        var tempThing = globalVars('reactionRoleInf');\n\t\t\t\t\t\t\t\t\t    tempThing[i][msgRct.id][3] = await reaction.users.array();\n                                        _this.storeValue(tempThing, 3, 'reactionRoleInf', cache);\n                                        interval = setInterval(resetTimer, 1000);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t} else {\n                                        var tempThing = globalVars('reactionRoleInf');\n                                        usrWhoReacted.setData('cooldownData.reactionMenu', '1');\n\t\t\t\t\t\t\t\t\t\ttempThing[i][msgRct.id][3] = await reaction.users.array();\n\t\t\t\t\t\t\t\t\t\t_this.storeValue(tempThing, 3, 'reactionRoleInf', cache)\n\t\t\t\t\t\t\t\t\t\tnewUsr.removeRole(newArr[io][1]);\n\t\t\t\t\t\t\t\t\t\tif (dmUserAfter) {\n\t\t\t\t\t\t\t\t\t\t\tmessageSent = messageSent.replace(/{roleName}/g, newArr[io][2]);\n                                            messageSent = messageSent.replace(/{server}/g, msgRct.guild.name);\n\t\t\t\t\t\t\t\t\t\t    newUsr.send(messageSent);\n                                        }\n                                        interval = setInterval(resetTimer, 1000);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n                                    var newArray = rectarray.filter(someItem => {\n                                        someItem.hasOwnProperty(msgRct.id) != true\n                                    })\n                                    _this.storeValue(newArray, 3, 'reactionRoleInf', cache);\n                                    _this.storeValue(JSON.stringify(newArray), 3, 'tempData', cache);\n\t\t\t\t\t\t\t\t\tmsgRct.edit({\n\t\t\t\t\t\t\t\t\t\tembed: {\n\t\t\t\t\t\t\t\t\t\t\tcolor: 0xff0000,\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Role Reaction Menu\",\n\t\t\t\t\t\t\t\t\t\t\tdescription: `An error has occured.\\nOne of the roles, role name - ${newArr[io][2]} does not exist anymore.\\nIn turn, this embed has now shutdown.\\nPlease remake the embed.`,\n\t\t\t\t\t\t\t\t\t\t\ttimestamp: new Date()\n\t\t\t\t\t\t\t\t\t\t}\n                                    });\n                                    _this.callNextAction(cache);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n                        usrWhoReacted.setData('cooldownData.reactionMenu', '0');\n                    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nfunction resetTimer() {\n    usrWhoReacted.setData('cooldownData.reactionMenu', '0');\n    clearInterval(interval);\n}\n\ncheckRoles();","storage":"0","varName":"","name":"Run Script"},{"storage":"3","varName":"tempData","name":"Save Variable"}]},{"name":"reactionStart","temp":"","event-type":"1","_id":"Lwriz","actions":[{"storage":"3","varName":"reactionRoleInf","changeType":"0","value":"[]","name":"Control Variable"},{"behavior":"0","interpretation":"1","code":"const _this = this;\nconst fs = require('fs');\nvar someArray = [];\nvar someNum = 0;\nvar globalData;\nvar interval;\n\nfs.readFile('./data/globalVars.json', function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    var savedVars = JSON.parse(data);\n    \n    if (savedVars.hasOwnProperty('tempData')) {\n        var newThing = savedVars.tempData.replace(/[\\\\]/g,'');\n        try {\n            _this.storeValue(JSON.parse(newThing), 3, 'reactionRoleInf', cache);\n            console.log('Saved reactionRoleInf');\n        } catch (e) {\n            console.log('Invalid JSON - Saved Vars')\n        }\n    }\n\n    if(fs.existsSync('./resources/serverRoleMenu.json')) {\n        fs.readFile('./resources/serverRoleMenu.json', async function read(err, data) {\n            if (err) {\n                throw err;\n            }\n            var DataToLoop = JSON.parse(data);\n            globalData = DataToLoop;\n            for (var key in DataToLoop) {\n                if (DataToLoop.hasOwnProperty(key)) {\n                    await someArray.push(DataToLoop[key]);\n                }\n            }\n            interval = setInterval(fetchMessages, 2000);\n        })\n\n    } else {\n        fs.writeFile(\"./resources/serverRoleMenu.json\", \"{}\", function(err) {\n            if(err) {\n                return console.log(err);\n            }\n        });\n    }\n});\n\nfunction fetchMessages() {\n if (someNum != someArray.length) {\n     var channelToFetch = client.channels.get(someArray[someNum]);\n     if (channelToFetch != null) {\n        channelToFetch.fetchMessages({ limit: 100 });\n        console.log(`Fetched messages in channel id ${someArray[someNum]}`);\n        someNum = someNum + 1;\n     } else {\n        delete globalData[someArray[someNum]];\n        fs.writeFile(\"./resources/serverRoleMenu.json\", JSON.stringify(globalData), function(err) {\n            if(err) {\n                return console.log(err);\n            }\n        }); \n     }\n } else {\n    console.log('Finished fetching messages from all logged servers.')\n    clearInterval(interval);\n }\n}","storage":"0","varName":"","name":"Run Script"}]},{"name":"PointsSystem-event","temp":"message","event-type":"2","_id":"XEBZK","actions":[{"message":"1","varName":"message","info":"3","storage":"1","varName2":"message-author","name":"Store Message Info"},{"member":"2","varName":"message-author","dataName":"cash","defaultVal":"0","storage":"1","varName2":"member-cash","name":"Store Member Data"},{"FirstNumber":"${tempVars(\"member-cash\")}","info":"0","SecondNumber":"1","storage":"1","varName":"cash-receive","name":"Basic Math Operation"},{"member":"2","varName":"message-author","dataName":"cash","changeType":"0","value":"tempVars(\"cash-receive\")","name":"Control Member Data"}]},{"name":"Jackpot Reaction Added","temp":"reaction","event-type":"28","_id":"acYUa","actions":[{"reaction":"1","varName":"reaction","info":"7","storage":"1","varName2":"member","name":"Store Reaction Info"},{"reaction":"1","varName":"reaction","info":"3","storage":"1","varName2":"reaction-name","name":"Store Reaction Info"},{"member":"2","varName":"member","info":"0","varName2":"","iftrue":"1","iftrueVal":"","iffalse":"0","iffalseVal":"","name":"Check If Member"},{"server":"0","varName":"","dataName":"jackpot-message","comparison":"4","value":"1","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Server Data"},{"reaction":"1","varName":"reaction","info":"0","storage":"1","varName2":"messsage-object","name":"Store Reaction Info"},{"message":"1","varName":"messsage-object","info":"1","storage":"1","varName2":"message-id","name":"Store Message Info"},{"message":"1","varName":"messsage-object","info":"4","storage":"1","varName2":"message-channel","name":"Store Message Info"},{"server":"0","varName":"","dataName":"jackpot-message","comparison":"1","value":"tempVars(\"message-id\")","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Server Data"},{"storage":"1","varName":"reaction-name","comparison":"1","value":"'💵'","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Variable"},{"server":"0","varName":"","dataName":"jackpot-entry","defaultVal":"0","storage":"1","varName2":"jackpot-entry","name":"Store Server Data"},{"server":"0","varName":"","dataName":"jackpot-prize","defaultVal":"0","storage":"1","varName2":"prize","name":"Store Server Data"},{"server":"0","varName":"","dataName":"jackpot-max-players","defaultVal":"0","storage":"1","varName2":"max-players","name":"Store Server Data"},{"member":"2","varName":"member","dataName":"cash","comparison":"4","value":"tempVars(\"jackpot-entry\")","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"45","name":"Check Member Data"},{"member":"2","varName":"member","dataName":"cash","defaultVal":"0","storage":"1","varName2":"member-cash","name":"Store Member Data"},{"FirstNumber":"${tempVars(\"member-cash\")}","info":"1","SecondNumber":"${tempVars(\"jackpot-entry\")}","storage":"1","varName":"set-cash","name":"Basic Math Operation"},{"member":"2","varName":"member","dataName":"cash","changeType":"0","value":"tempVars(\"set-cash\")","name":"Control Member Data"},{"title":"Member Joined!","author":"Jackpot","color":"RANDOM","timestamp":"true","url":"","authorIcon":"https://image.flaticon.com/icons/png/512/536/536101.png","imageUrl":"","thumbUrl":"","storage":"1","varName":"join-embed","name":"Create Embed Message"},{"storage":"1","varName":"join-embed","message":"${tempVars(\"member\")} paid ${tempVars(\"jackpot-entry\")} cash and joined to the jackpot!","name":"Set Embed Description"},{"storage":"1","varName":"join-embed","channel":"5","varName2":"message-channel","storage3":"0","varName3":"","name":"Send Embed Message"},{"reaction":"1","varName":"reaction","info":"4","storage":"1","varName2":"reaction-count","name":"Store Reaction Info"},{"FirstNumber":"${tempVars(\"reaction-count\")}","info":"1","SecondNumber":"1","storage":"1","varName":"members-reactions","name":"Basic Math Operation"},{"storage":"1","varName":"members-reactions","comparison":"1","value":"tempVars(\"max-players\")","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Variable"},{"reaction":"1","varName":"reaction","info":"2","storage":"1","varName2":"reaction-list","name":"Store Reaction Info"},{"list":"7","varName":"reaction-list","getType":"2","position":"","storage":"1","varName2":"random-member","name":"Get Item from List"},{"member":"2","varName":"random-member","info":"1","storage":"1","varName2":"member-id","name":"Store Member Info"},{"info":"0","find":"${tempVars(\"member-id\")}","storage":"1","varName":"member-won","name":"Find Member"},{"member":"2","varName":"member-won","info":"0","varName2":"","iftrue":"2","iftrueVal":"22","iffalse":"0","iffalseVal":"","name":"Check If Member"},{"info":"1","find":"Premium","storage":"1","varName":"premium-role","name":"Find Role"},{"member":"2","varName":"member-won","role":"3","varName2":"premium-role","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check If Member has Role"},{"FirstNumber":"${tempVars(\"prize\")}","info":"2","SecondNumber":"1.0","storage":"1","varName":"prize-after-math","name":"Basic Math Operation"},{"storage":"1","varName":"Tax","changeType":"0","value":"\"0% (Premium)\"","name":"Control Variable"},{"count":"2","name":"Skip Actions"},{"FirstNumber":"${tempVars(\"prize\")}","info":"2","SecondNumber":"0.9","storage":"1","varName":"prize-after-math","name":"Basic Math Operation"},{"storage":"1","varName":"Tax","changeType":"0","value":"\"10%\"","name":"Control Variable"},{"title":"Winner!","author":"Jackpot","color":"RANDOM","timestamp":"true","url":"","authorIcon":"https://image.flaticon.com/icons/png/512/536/536101.png","imageUrl":"","thumbUrl":"","storage":"1","varName":"winner-embed","name":"Create Embed Message"},{"storage":"1","varName":"winner-embed","message":"${tempVars(\"random-member\")} won the jackpot!","name":"Set Embed Description"},{"storage":"1","varName":"winner-embed","fieldName":"Prize","message":"${tempVars(\"prize\")}","inline":"0","name":"Add Embed Field"},{"storage":"1","varName":"winner-embed","fieldName":"Tax","message":"${tempVars(\"Tax\")}","inline":"0","name":"Add Embed Field"},{"storage":"1","varName":"winner-embed","fieldName":"Total Cash","message":"${Math.floor(tempVars(\"prize-after-math\"))}","inline":"0","name":"Add Embed Field"},{"storage":"1","varName":"winner-embed","channel":"5","varName2":"message-channel","storage3":"0","varName3":"","name":"Send Embed Message"},{"member":"2","varName":"member-won","dataName":"cash","defaultVal":"0","storage":"1","varName2":"winner-cash","name":"Store Member Data"},{"FirstNumber":"${tempVars(\"winner-cash\")}","info":"0","SecondNumber":"${Math.floor(tempVars(\"prize-after-math\"))}","storage":"1","varName":"winner-set-cash","name":"Basic Math Operation"},{"member":"2","varName":"member-won","dataName":"cash","changeType":"0","value":"tempVars(\"winner-set-cash\")","name":"Control Member Data"},{"server":"0","varName":"","dataName":"jackpot-message","changeType":"0","value":"0","name":"Control Server Data"},{"name":"End Action Sequence"},{"channel":"5","varName":"member","message":"I'm sorry, You don't have enough cash to entry to the jackpot.","storage":"0","varName2":"","iffalse":"0","iffalseVal":"","name":"Send Message"},{"reaction":"1","varName":"reaction","member":"2","varName2":"member","name":"Remove Reaction"}]},{"name":"MutedRole","temp":"","event-type":"4","_id":"xwFhe","actions":[{"roleName":"Muted","hoist":"false","mentionable":"false","color":"","position":"","storage":"3","varName":"mutedrole","name":"Create Role"},{"role":"5","varName":"mutedrole","permission":"SEND_MESSAGES","state":"1","name":"Set Role Permissions"},{"role":"5","varName":"mutedrole","permission":"SEND_TTS_MESSAGES","state":"1","name":"Set Role Permissions"}]},{"name":"MutedRoleDelete","temp":"","event-type":"5","_id":"ZRkna","actions":[{"storage":"5","varName":"mutedrole","name":"Delete Role"}]}]